name: Build and Package

on:
  release:
    types:
      [released]
  
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v2     

      - name: Restore NuGet packages
        run: nuget restore "RevitBatchProcessor.sln"
      
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
                    
      - name: Get version number
        id: version_num_set
        run: |
          echo "Version number from tag is ${{github.event.release.tag_name}}"
            $versionNum = "${{github.event.release.tag_name}}"
            $versionNum = $versionNum -replace "-beta", ""
            $version_number = $versionNum -replace "v", ""
            echo "Numeric only from that is $version_number"
            echo "version=$version_number" >> $env:GITHUB_OUTPUT
          
      - name: Update installer config
        run: |
            $content = Get-Content -Path Setup/RevitBatchProcessor.iss -Raw
            echo "Input installer config is $content"
            $tag = "${{ github.event.release.tag_name }}"
            if ($tag -like "*-beta") {
                $replaceWord = 'OutputBaseFilename=RevitBatchProcessorSetup_v{#AppVersion}-beta'
                $content = $content -replace 'OutputBaseFilename=RevitBatchProcessorSetup_v{#AppVersion}-beta', $replaceWord
            } else {
                $replaceWord = 'OutputBaseFilename=RevitBatchProcessorSetup_v{#AppVersion}'
                $content = $content -replace 'OutputBaseFilename=RevitBatchProcessorSetup_v{#AppVersion}', $replaceWord
            }
            $content = $content -replace '#define AppVersion ".*"', '#define AppVersion "${{steps.version_num_set.outputs.version}}"'
            
            
            echo "Updated installer config is $content"
            Set-Content -Path Setup/RevitBatchProcessor.iss -Value $content

      - name: Update version number - GlobalAssemblyInfo.cs
        run: |
          $assemblyInfoFile = "Common/GlobalAssemblyInfo.cs"
          $fileContent = Get-Content -Path $assemblyInfoFile -Raw
          echo "Input version number is $fileContent"
          $fileContent = $fileContent -replace '\("\d+\.\d+\.\d+"\)', "(`"${{steps.version_num_set.outputs.version}}`")" 
          echo "Updated version number is $fileContent"
          Set-Content -Path $assemblyInfoFile -Value $fileContent            

      - name: Build solution
        run: |
            msbuild "RevitBatchProcessor.sln" /p:Configuration=Release /p:Platform="x64" /m

      - name: Verify installer sources exist
        shell: pwsh
        run: |
            $missing = @()
            function Test-DirWithFiles($path) {
              if (-not (Test-Path -Path $path -PathType Container)) { return "Missing directory: $path" }
              $fileCount = (Get-ChildItem -Path $path -File -ErrorAction SilentlyContinue | Measure-Object).Count
              if ($fileCount -eq 0) { return "Directory has no files (expected build output): $path" }
              return $null
            }

            # 1. Inno Setup script file
            $issFile = "Setup/RevitBatchProcessor.iss"
            if (-not (Test-Path -Path $issFile -PathType Leaf)) { $missing += "Missing file: $issFile" }

            # 2. GUI output directory
            $guiOut = "BatchRvtGUI/bin/x64/Release"
            $res = Test-DirWithFiles $guiOut; if ($res) { $missing += $res }

            # 3. Addin years 2015-2026 (directories + .addin files)
            foreach ($year in 2015..2026) {
              $addinDir = "BatchRvtAddin$year/bin/x64/Release"
              $res = Test-DirWithFiles $addinDir; if ($res) { $missing += $res }
              $addinFile = "BatchRvtAddin$year/BatchRvtAddin$year.addin"
              if (-not (Test-Path -Path $addinFile -PathType Leaf)) { $missing += "Missing file: $addinFile" }
            }

            if ($missing.Count -eq 0) {
              Write-Host "Verification succeeded: all referenced installer sources exist."
            } else {
              Write-Host "The following required sources were NOT found:" 
              $missing | ForEach-Object { Write-Host $_ }
            }

      - name: Create installer file
        id: create_installer_file
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.7
        with: 
          path: Setup/RevitBatchProcessor.iss
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: Setup\Output\RevitBatchProcessorSetup_${{github.event.release.tag_name}}.exe
          asset_name: RevitBatchProcessorSetup_${{github.event.release.tag_name}}.exe
          asset_content_type: application/octet-stream

      - name: Update readme with new version
        env:
          VERSION_NUM: ${{ steps.version_num_set.outputs.version }}
          TAG_VALUE: ${{ github.event.release.tag_name }}
        run: |
          python $env:GITHUB_WORKSPACE\.github\workflows\update_readme.py
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update version to ${{github.event.release.tag_name}} in README and .iss file"
          title: '[Actions] Update README and .iss file'
          body: 'Update version in README'
          branch: github-actions/update-readme 